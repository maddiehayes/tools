{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Kafka Brokers for SAS CI TNG",
  "Parameters": {
    "Owner": {
      "Description": "Owner of the Kafka Cluster",
      "Default": "razing",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "AdminEmail": {
      "Description": "Email of the person who is creating the stack",
      "Type": "String",
      "Default": "randall.zingle@sas.com",
      "MinLength": "3",
      "ConstraintDescription": "valid email address"
    },
    "TierName": {
      "Description": "The name of the tier the instance belongs",
      "Type": "String",
      "Default": "baldur",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "KeyPairName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair. Instances will launch with this KeyPair.",
      "Default": "ci-it-tng",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "Can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "Subnet": {
      "Description": "The Subnet to create the Kafka instance in.",
      "Type": "AWS::EC2::Subnet::Id",
      "Default": "subnet-00ecb52b"
    },
    "AvailabilityZone": {
      "Description": "The Availability Zone to create the Kafka instance in.",
      "Type": "String",
      "Default": "us-east-1b"
    },
    "CIDomainName": {
      "Description": "Base domain name for CI 360 for Route53.",
      "Type": "String",
      "Default": "cidev.sas.us"
    },
    "NodeAMI": {
      "Description": "Amazon Linux 2 AMI",
      "Type": "String",
      "Default": "ami-0b69ea66ff7391e80"
    },
    "KubernetesInstanceType": {
      "Description": "The type of node to be provisioned",
      "Type": "String",
      "Default": "m5a.xlarge"
    },
    "S3KubernetesAssetsPath": {
      "Description": "Location in the deployment bucket containing the fileset builds to use for initial deployment.",
      "Type": "String",
      "Default": "shared/kubernetes"
    },
    "CIAssetsBucket": {
      "Type": "String",
      "Description": "The name of the assets bucket",
      "Default": "ci-360-deployment-dev-us-east-1"
    },
    "KubernetesDiskType": {
      "Description": "The type of EBS Volume (st1 = HDD or gp2 = SSD)",
      "Default": "gp2",
      "Type": "String",
      "AllowedValues": [
        "st1",
        "gp2"
      ]
    },
    "BaseSecurityStack" : {
      "Description": "The name of the KafkaSecurity stack which has InstanceProfiles and SecurityGroups",
      "Type": "String"
    }
  },
  "Resources": {
    "BaseSecurityStackInfo": {
      "Type": "Custom::BaseSecurityStackInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            ":",
            [
              "arn:aws:lambda",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              "function:lookupStackVariables"
            ]
          ]
        },
        "StackName": {
          "Ref": "BaseSecurityStack"
        },
        "GitTagShaVersion": "1"
      }
    },
    "EBSVolumeSdb": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Encrypted": false,
        "Size": "2000",
        "VolumeType": {
          "Ref": "KubernetesDiskType"
        },
        "AvailabilityZone": {
          "Ref": "AvailabilityZone"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Kubernetes"
                ]
              ]
            }
          },
          {
            "Key": "resourceowner",
            "Value": {
              "Ref": "Owner"
            }
          }
        ]
      }
    },
    "KubernetesInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "TierName"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "TierName"
                  },
                  "Kubernetes"
                ]
              ]
            }
          },
          {
            "Key": "resourceowner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "role",
            "Value": "kubernetes"
          }
        ],
        "SubnetId": {
          "Ref": "Subnet"
        },
        "ImageId": {
          "Ref": "NodeAMI"
        },
        "InstanceType": {
          "Ref": "KubernetesInstanceType"
        },
        "IamInstanceProfile": {
          "Fn::GetAtt": [
            "BaseSecurityStackInfo",
            "KubernetesInstanceProfile"
          ]
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "BaseSecurityStackInfo",
              "KubernetesSecurityGroup"
            ]
          },
          {
            "Fn::GetAtt": [
              "BaseSecurityStackInfo",
              "BaseSecurityGroup"
            ]
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "EbsOptimized": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "DeleteOnTermination": "true",
              "VolumeSize": "300"
            }
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "EBSVolumeSdb"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "yum upgrade -y\n",
                "####################\n",
                "# Base install setup\n",
                "####################\n",
                "mkdir -p /install/citng\n",
                "groupadd sas\n",
                "useradd -G sas sassrv\n",
                "chown -R sassrv:sas /install\n",
                "export CI_ASSETS_BUCKET_NAME=",
                {
                  "Ref": "CIAssetsBucket"
                },
                "\n",
                "export S3_KAFKA_ASSETS_PATH=",
                {
                  "Ref": "S3KubernetesAssetsPath"
                },
                "\n",
                "export CI_DOMAIN_NAME=",
                {
                  "Ref": "CIDomainName"
                },
                "\n",
                "export TIER_NAME=",
                {
                  "Ref": "TierName"
                },
                "\n",
                "export AVAILABILITY_ZONE=",
                {
                  "Ref": "AvailabilityZone"
                },
                "\n",
                "echo export CI_ASSETS_BUCKET_NAME=\"${CI_ASSETS_BUCKET_NAME}\" >> /install/install_vars.sh\n",
                "echo export S3_KAFKA_ASSETS_PATH=\"${S3_KAFKA_ASSETS_PATH}\" >> /install/install_vars.sh\n",
                "echo export CI_DOMAIN_NAME=\"${CI_DOMAIN_NAME}\" >> /install/install_vars.sh\n",
                "echo export TIER_NAME=\"${TIER_NAME}\" >> /install/install_vars.sh\n",
                "echo export AVAILABILITY_ZONE=\"${AVAILABILITY_ZONE}\" >> /install/install_vars.sh\n",
                "#####################\n",
                "# Setup Disks        \n",
                "#####################\n",
                "mkfs -t ext4 /dev/sdb\n",
                "mkdir /kubernetes\n",
                "mount /dev/sdb /kubernetes/\n",
                "echo \"/dev/sdb /kubernetes ext4 defaults,noatime 1 2\" >> /etc/fstab\n",
                "#####################\n",
                "# Increase Filehandles\n",
                "#####################\n",
                "echo \"sassrv hard nofile 65000\" >> /etc/security/limits.conf\n",
                "echo \"sassrv soft nofile 55000\" >> /etc/security/limits.conf\n",
                "#####################\n",
                "# Install Kubernetes Tools\n",
                "#####################\n",
                "aws s3 cp s3://${CI_ASSETS_BUCKET_NAME}/${S3_KAFKA_ASSETS_PATH}/kubernetes-userdata.sh /install\n",
                "chmod u+x /install/kubernetes-userdata.sh\n",
                "/install/kubernetes-userdata.sh &> /install/install.log"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "KubernetesInfo": {
      "Description": "KubernetesInfo",
      "Value": "This is Kubernetes"
    }
  }
}
